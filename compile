#!/bin/sh

PLATFORM="`uname`"

if [ ! -d "bin" ]; then
  mkdir bin
fi

## MacPorts check
if [ "$PLATFORM" = "Darwin" ]; then
  if [ ! -d "/opt/local" ]; then
    echo "Must have MacPorts installed in default location to compile."
    exit 1;
  fi

  if [ ! -f "/opt/local/include/tiffio.h" ]; then
    sudo port install tiff
  fi

fi

## Comment out to compile release version.
DEBUG='-DDEBUG'

## Dynamic library version
if [ "$1" = "lib" ]; then
  if [ -f bin/latwuc.o ]; then rm bin/latwuc.o
    fi

  if [ -f bin/latwuc.so ]; then rm bin/latwuc.so
    fi

  if [ -f bin/tiff_write_dyn ]; then rm bin/tiff_write_dyn
    fi

  echo "Compiling dynamic library version."

  if [ "$PLATFORM" = "Darwin" ]; then
    clang -c -fpic -o bin/latwuc.o src/latwuc.c -Wall -Wextra \
      -I/opt/local/include -O3
    clang -shared -lc -o bin/latwuc.so bin/latwuc.o -L/opt/local/lib -ltiff
    clang -o bin/tiff_write_dyn src/tiff_example_dyn.c -ldl -ltiff \
          -Lbin/ -L/opt/local/lib $DEBUG -DLIB -Wall -Wextra -O3
  elif [ "$PLATFORM" = "Linux" ]; then
    clang -c -fpic -o bin/latwuc.o src/latwuc.c -Wall -Wextra -O3
    clang -shared -lc -o bin/latwuc.so bin/latwuc.o
    clang -o bin/tiff_write_dyn src/tiff_example_dyn.c -ldl -ltiff -Lbin/ \
      $DEBUG -DLIB -Wall -Wextra -O3
  fi

# Include file version.
else
  if [ -f bin/tiff_write_static ]; then rm bin/tiff_write_static
    fi

  echo "Compiling static verson."

  if [ "$PLATFORM" = "Darwin" ]; then
    clang -obin/tiff_write_static src/tiff_example_include.c src/latwuc.c \
      -ltiff -I/opt/local/include -L/opt/local/lib $DEBUG -Wall -Wextra -O3
  elif [ "$PLATFORM" = "Linux" ]; then
    clang -obin/tiff_write_static src/tiff_example_include.c src/latwuc.c \
      -ltiff $DEBUG -Wall -Wextra -O3
  fi
fi
