#!/bin/bash

PLATFORM="`uname`"

if [ ! -d "bin" ]; then
  mkdir bin
fi

## MacPorts check
if [ "$PLATFORM" = "Darwin" ]; then
  if [ ! -d "/opt/local" ]; then
    echo "Must have MacPorts installed in default location to compile."
    exit 1;
  fi

  if [ ! -f "/opt/local/include/tiffio.h" ]; then
    echo "You do not have libtiff installed. Running 'sudo port install tiff'"
    sudo port install tiff
  fi

fi

## Comment out to compile release version.
DEBUG='-DDEBUG'

SOURCE=(ctiff_data\
        ctiff_io\
        ctiff_meta\
        ctiff_settings\
        ctiff_util\
        ctiff_write)

## Mac and Linux have different include paths
INCLUDES=''
LIBRARY=''

if [ "$PLATFORM" = "Darwin" ]; then
  INCLUDES='-I/opt/local/include'
  LIBRARY='-L/opt/local/lib'
fi

## Dynamic library version
if [ "$1" = "lib" ]; then
  if [ -f bin/ctiff.o ]; then rm bin/ctiff.o
    fi

  if [ -f bin/libctiff.so.0 ]; then rm bin/libctiff.so.0
    fi

  if [ -f bin/tiff_write_dyn ]; then rm bin/tiff_write_dyn
    fi

  echo "Compiling dynamic library version."

  for code in ${SOURCE[*]}
  do
    clang -c -fpic $INCLUDES -Wall $DDEBUG \
      -o bin/$code.o src/$code.c
  done

  clang -shared -W1,-soname,libctiff.so.0 -lc $LIBRARY -ltiff \
    -o bin/libctiff.so.0 bin/*.o

  clang -ldl -lm -Lbin/ -DLIB -Wall $DDEBUG \
    -o bin/tiff_write_dyn               \
    examples/tiff_example_dyn_unix.c    \
    examples/buffer.c                   \
    examples/error.c

# Include file version.
else
  if [ -f bin/tiff_write_static ]; then rm bin/tiff_write_static
    fi

  echo "Compiling static verson."

  clang -ltiff $INCLUDES $LIBRARY $DEBUG -Wall \
    -obin/tiff_write_static                    \
    examples/tiff_example_include.c            \
    examples/buffer.c                          \
    examples/error.c                           \
    src/*.c
fi
