Cloning
=======

For contributors

    git clone git@github.com:LaserAnalytics/latwuc.git

For read-only

    git clone git://github.com/LaserAnalytics/latwuc.git

Compiling
=========

Linux
-----

For Linux, libTIFF must be an installed library that is in the normal
library search path. This is left up to the user to determine how to
install, as it may be done in many different ways (package managers,
source). Once libTIFF is installed in a standard location, run `./compile`
to compile "tiff\_example\_include.c" and `./compile lib` to compile
"tiff\_example\_dyn.c".

Mac
---

For Mac, first make sure [MacPorts][MP] is installed.
Then run `./compile` to compile "tiff\_example\_include.c" and `./compile
lib` to compile "tiff\_example\_dyn.c". This shell script will automatically
install libTIFF from MacPorts if it is not already installed.

Windows
-------

Use the provided [Microsoft Visual Studio 2010][VS2010Express] project files
to open and compile latwuc.

libTIFF 3.9.5, which is a required library, is included in the source, and
the libtiff.dll file inside the libtiff directory was compiled on a Windows
XP 32-bit system. As such, it may be possible to use the provided DLL to
compile latwuc. However, if Visual Studio (VS) complains about libTIFF or
its DLL the instructions for compiling libTIFF on Windows can be found
[here][libtiff_build]. Note that `nmake` may be most easily accessed through
the VS2010 command prompt program, and that some components may fail to build
but this is ok as long as the dll is produced.


Using in LabVIEW
================

See [this article][LabVIEW_DLL] (skipping to step 9) for how to use the
created DLL. It is advisable to move the DLL to a system wide stable location
and create a subVI to use the DLL, as this will make the program that uses
latwuc easier to read and debug.

The relevant code parameters are here.

    int tiffWrite(int width, int height, int pages,
                  char* artist, char* copyright, char* make, char* model,
                  char* software, char* image_desc,
                  char* output_path, uint16_t* buffer);

To note that LabVIEW typedefs `char\*` as `CStr` (this shows up in the
'Function prototype' window under the 'Parameters' tab), and that the
dimensions of the buffer variable must be specified in the 'Call Library
Function Node' VI.

[libtiff_build]: http://www.remotesensing.org/libtiff/build.html#PC "Building the libTIFF Software Distribution"
[LabVIEW_DLL]: https://decibel.ni.com/content/docs/DOC-1690 "Using Existing C Code or a DLL in LabVIEW"
[MP]: http://www.macports.org/ "Macports home page"
[VS2010Express]: http://www.microsoft.com/visualstudio/en-gb/express "Microsoft Visual Studio Express 2010 download page"
